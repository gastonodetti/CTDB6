{"ast":null,"code":"var _jsxFileName = \"/home/gaston/Desktop/CTD/CTDB6/clase8/frontend_3-clase_8-repaso/src/App.jsx\";\nimport React, { Component } from 'react';\nimport Button from './Button';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.colors = [\"RED\", \"BLUE\", \"YELLOW\", \"GREEN\", \"ORANGE\", \"MAGENTA\", \"BROWN\", \"LIME\"];\n  }\n\n  /* ESPACIO DE TRABAJO\n  - Armar la estructura para una Class Component\n  - Hacer un state con el arreglo de los colores\n  - Vamos a usar una funcion shuffle mas abajo y vamos a enviarla por props... que\n    formas tenemos para no perder el contexto?\n  */\n\n  /* ESPACIO DE TRABAJO\n  Funcion Shuffle\n  Aqui deberan hacer una funcion que me retorne un nuevo arreglo con los\n  colores mezclados\n  */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: this.colors.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: color,\n          children: color\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fn: \"Recibe una funcion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","Button","App","colors","render","map","color"],"sources":["/home/gaston/Desktop/CTD/CTDB6/clase8/frontend_3-clase_8-repaso/src/App.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport Button from './Button'\nimport \"./App.css\";\n\nexport default class App extends Component {\n  colors = [\"RED\",\"BLUE\",\"YELLOW\", \"GREEN\",\"ORANGE\",\"MAGENTA\",\"BROWN\",\"LIME\"]\n  /* ESPACIO DE TRABAJO\n  - Armar la estructura para una Class Component\n  - Hacer un state con el arreglo de los colores\n  - Vamos a usar una funcion shuffle mas abajo y vamos a enviarla por props... que\n    formas tenemos para no perder el contexto?\n  */\n\n    \n       \n\n  /* ESPACIO DE TRABAJO\n  Funcion Shuffle\n  Aqui deberan hacer una funcion que me retorne un nuevo arreglo con los\n  colores mezclados\n  */\n\n  \n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"panel\">\n          {this.colors.map(color => <div key={color} className={color}>{color}</div>)}\n        </div>\n        <Button fn={\"Recibe una funcion\"} />\n      </div>\n\n    )\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EAAA;IAAA;IAAA,KACzCG,MADyC,GAChC,CAAC,KAAD,EAAO,MAAP,EAAc,QAAd,EAAwB,OAAxB,EAAgC,QAAhC,EAAyC,SAAzC,EAAmD,OAAnD,EAA2D,MAA3D,CADgC;EAAA;;EAEzC;AACF;AACA;AACA;AACA;AACA;;EAKE;AACF;AACA;AACA;AACA;EAGEC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAK,SAAS,EAAC,OAAf;QAAA,UACG,KAAKD,MAAL,CAAYE,GAAZ,CAAgBC,KAAK,iBAAI;UAAiB,SAAS,EAAEA,KAA5B;UAAA,UAAoCA;QAApC,GAAUA,KAAV;UAAA;UAAA;UAAA;QAAA,QAAzB;MADH;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,MAAD;QAAQ,EAAE,EAAE;MAAZ;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;AA7BwC"},"metadata":{},"sourceType":"module"}