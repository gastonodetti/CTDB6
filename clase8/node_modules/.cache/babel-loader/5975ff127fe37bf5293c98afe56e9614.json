{"ast":null,"code":"var _jsxFileName = \"/home/gaston/Desktop/CTD/CTDB6/clase8/frontend_3-clase_8-repaso/src/App.jsx\";\nimport React from 'react';\nimport Button from './Button';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const colors = [\"RED\", \"BLUE\", \"YELLOW\", \"GREEN\", \"ORANGE\", \"MAGENTA\", \"BROWN\", \"LIME\"];\n  /* ESPACIO DE TRABAJO\n  - Armar la estructura para una Class Component\n  - Hacer un state con el arreglo de los colores\n  - Vamos a usar una funcion shuffle mas abajo y vamos a enviarla por props... que\n    formas tenemos para no perder el contexto?\n  */\n\n  /* ESPACIO DE TRABAJO\n  Funcion Shuffle\n  Aqui deberan hacer una funcion que me retorne un nuevo arreglo con los\n  colores mezclados\n  */\n\n  const shuffle = () => {\n    alert('ok'); // const result = this.colors.sort(() => (Math.random() > .5) ? 1 : -1)\n    // this.setState({colors: result})\n    // console.log(result)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: colors.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: color,\n        children: color\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fn: shuffle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Button","App","colors","shuffle","alert","map","color"],"sources":["/home/gaston/Desktop/CTD/CTDB6/clase8/frontend_3-clase_8-repaso/src/App.jsx"],"sourcesContent":["import React from 'react'\nimport Button from './Button'\nimport \"./App.css\";\n\nconst App = () => {\n  const colors = [\"RED\",\"BLUE\",\"YELLOW\", \"GREEN\",\"ORANGE\",\"MAGENTA\",\"BROWN\",\"LIME\"]\n  /* ESPACIO DE TRABAJO\n  - Armar la estructura para una Class Component\n  - Hacer un state con el arreglo de los colores\n  - Vamos a usar una funcion shuffle mas abajo y vamos a enviarla por props... que\n    formas tenemos para no perder el contexto?\n  */\n\n    \n       \n\n  /* ESPACIO DE TRABAJO\n  Funcion Shuffle\n  Aqui deberan hacer una funcion que me retorne un nuevo arreglo con los\n  colores mezclados\n  */\n\n  const shuffle = () => {\n    alert('ok')\n    // const result = this.colors.sort(() => (Math.random() > .5) ? 1 : -1)\n    // this.setState({colors: result})\n    // console.log(result)\n  }\n  \n    return (\n      <div className=\"container\">\n        <div className=\"panel\">\n          {colors.map(color => <div key={color} className={color}>{color}</div>)}\n        </div>\n        <Button fn={shuffle} />\n      </div>\n\n    )\n  }\n\nexport default App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAChB,MAAMC,MAAM,GAAG,CAAC,KAAD,EAAO,MAAP,EAAc,QAAd,EAAwB,OAAxB,EAAgC,QAAhC,EAAyC,SAAzC,EAAmD,OAAnD,EAA2D,MAA3D,CAAf;EACA;AACF;AACA;AACA;AACA;AACA;;EAKE;AACF;AACA;AACA;AACA;;EAEE,MAAMC,OAAO,GAAG,MAAM;IACpBC,KAAK,CAAC,IAAD,CAAL,CADoB,CAEpB;IACA;IACA;EACD,CALD;;EAOE,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAK,SAAS,EAAC,OAAf;MAAA,UACGF,MAAM,CAACG,GAAP,CAAWC,KAAK,iBAAI;QAAiB,SAAS,EAAEA,KAA5B;QAAA,UAAoCA;MAApC,GAAUA,KAAV;QAAA;QAAA;QAAA;MAAA,QAApB;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,MAAD;MAAQ,EAAE,EAAEH;IAAZ;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAlCH;;KAAMF,G;AAoCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}